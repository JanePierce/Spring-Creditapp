package com.creditapp.creditsystem.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;
import java.util.Map;

@RestController
public class PostgresTestController {

    @Autowired
    private JdbcTemplate jdbcTemplate;

    @GetMapping("/test-postgres")
    public String testPostgres() {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é PostgreSQL
            String version = jdbcTemplate.queryForObject("SELECT version()", String.class);
            System.out.println("‚úÖ PostgreSQL –≤–µ—Ä—Å–∏—è: " + version);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
            List<Map<String, Object>> clients = jdbcTemplate.queryForList("SELECT COUNT(*) as count FROM clients");
            List<Map<String, Object>> applications = jdbcTemplate.queryForList("SELECT COUNT(*) as count FROM credit_applications");
            List<Map<String, Object>> rules = jdbcTemplate.queryForList("SELECT COUNT(*) as count FROM scoring_rules");

            long clientCount = (Long) clients.get(0).get("count");
            long applicationCount = (Long) applications.get(0).get("count");
            long ruleCount = (Long) rules.get(0).get("count");

            System.out.println("‚úÖ PostgreSQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞:");
            System.out.println("   –ö–ª–∏–µ–Ω—Ç–æ–≤: " + clientCount);
            System.out.println("   –ó–∞—è–≤–æ–∫: " + applicationCount);
            System.out.println("   –ü—Ä–∞–≤–∏–ª: " + ruleCount);

            return String.format(
                    "<h2>‚úÖ PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç!</h2>" +
                            "<p><strong>–í–µ—Ä—Å–∏—è:</strong> %s</p>" +
                            "<p><strong>üë• –ö–ª–∏–µ–Ω—Ç–æ–≤:</strong> %d</p>" +
                            "<p><strong>üìÑ –ó–∞—è–≤–æ–∫:</strong> %d</p>" +
                            "<p><strong>üìä –ü—Ä–∞–≤–∏–ª:</strong> %d</p>" +
                            "<p>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: <strong>credit_db</strong></p>",
                    version, clientCount, applicationCount, ruleCount
            );

        } catch (Exception e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL: " + e.getMessage());
            e.printStackTrace();
            return "<h2>‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL</h2>" +
                    "<p><strong>–û—à–∏–±–∫–∞:</strong> " + e.getMessage() + "</p>" +
                    "<p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:</p>" +
                    "<ul>" +
                    "<li>–ó–∞–ø—É—â–µ–Ω –ª–∏ PostgreSQL</li>" +
                    "<li>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ –ø–∞—Ä–æ–ª—å –≤ application.properties</li>" +
                    "<li>–°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 'credit_db'</li>" +
                    "</ul>";
        }
    }

    @GetMapping("/test-data")
    public String testData() {
        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö
            List<Map<String, Object>> recentApplications = jdbcTemplate.queryForList(
                    "SELECT c.first_name, c.last_name, ca.amount, ca.status " +
                            "FROM credit_applications ca " +
                            "JOIN clients c ON ca.client_id = c.id " +
                            "ORDER BY ca.creation_date DESC LIMIT 5"
            );

            StringBuilder result = new StringBuilder();
            result.append("<h3>üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞—è–≤–∫–∏:</h3>");
            result.append("<table border='1' style='border-collapse: collapse;'>");
            result.append("<tr><th>–ö–ª–∏–µ–Ω—Ç</th><th>–°—É–º–º–∞</th><th>–°—Ç–∞—Ç—É—Å</th></tr>");

            for (Map<String, Object> app : recentApplications) {
                result.append("<tr>")
                        .append("<td>").append(app.get("first_name")).append(" ").append(app.get("last_name")).append("</td>")
                        .append("<td>").append(app.get("amount")).append(" —Ä—É–±.</td>")
                        .append("<td>").append(app.get("status")).append("</td>")
                        .append("</tr>");
            }
            result.append("</table>");

            return result.toString();

        } catch (Exception e) {

            return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: " + e.getMessage();
        }
    }
}


